import React, { useState } from "react";
import "./chatbot.css";
import botAvatar from "../Assets/bot-avatar.png";
import twitterIcon from "../Assets/icon.jpeg";
import instagramIcon from "../Assets/icon.jpeg";
import youtubeIcon from "../Assets/icon.jpeg";
import facebookIcon from "../Assets/icon.jpeg";
import whatsappIcon from "../Assets/icon.jpeg";

const Chatbot = ({ onClose }) => {
  const [language, setLanguage] = useState("en");

  const translations = {
    en: {
      greeting: "Hello! I'm Saarthi, your SmartBot ü§ñ",
      experience: "Get ready for a Queueless Experience! üéüÔ∏è",
      startChat: "üöÄ START CHAT",
      followMe: "FOLLOW ME:",
    },
    es: {
      greeting: "¬°Hola! Soy Saarthi, tu SmartBot ü§ñ",
      experience: "¬°Prep√°rate para una experiencia sin colas! üéüÔ∏è",
      startChat: "üöÄ INICIAR CHAT",
      followMe: "S√çGUEME:",
    },
    fr: {
      greeting: "Bonjour! Je suis Saarthi, votre SmartBot ü§ñ",
      experience: "Pr√©parez-vous pour une exp√©rience sans file d'attente! üéüÔ∏è",
      startChat: "üöÄ D√âMARRER LE CHAT",
      followMe: "SUIVEZ-MOI:",
    },
    de: {
      greeting: "Hallo! Ich bin Saarthi, dein SmartBot ü§ñ",
      experience: "Mach dich bereit f√ºr ein warteschlangenfreies Erlebnis! üéüÔ∏è",
      startChat: "üöÄ CHAT STARTEN",
      followMe: "FOLGE MIR:",
    },
    it: {
      greeting: "Ciao! Sono Saarthi, il tuo SmartBot ü§ñ",
      experience: "Preparati per un'esperienza senza code! üéüÔ∏è",
      startChat: "üöÄ AVVIA CHAT",
      followMe: "SEGUIMI:",
    },
    hi: {
      greeting: "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§∏‡§æ‡§∞‡§•‡•Ä, ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü‡§¨‡•â‡§ü ü§ñ",
      experience: "‡§ï‡•É‡§™‡§Ø‡§æ ‡§ï‡§§‡§æ‡§∞ ‡§∞‡§π‡§ø‡§§ ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•ã ‡§ú‡§æ‡§á‡§è! üéüÔ∏è",
      startChat: "üöÄ ‡§ö‡•à‡§ü ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",
      followMe: "‡§Æ‡•Å‡§ù‡•á ‡§´‡•â‡§≤‡•ã ‡§ï‡§∞‡•á‡§Ç:",
    },
    mr: {
      greeting: "‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞! ‡§Æ‡•Ä ‡§∏‡§æ‡§∞‡§•‡•Ä, ‡§§‡•Å‡§Æ‡§ö‡§æ ‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü‡§¨‡•â‡§ü ü§ñ",
      experience: "‡§ï‡•É‡§™‡§Ø‡§æ ‡§∞‡§æ‡§Ç‡§ó‡•á‡§∂‡§ø‡§µ‡§æ‡§Ø ‡§Ö‡§®‡•Å‡§≠‡§µ‡§æ‡§∏‡§æ‡§†‡•Ä ‡§§‡§Ø‡§æ‡§∞ ‡§µ‡•ç‡§π‡§æ! üéüÔ∏è",
      startChat: "üöÄ ‡§ö‡•Ö‡§ü ‡§∏‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§æ",
      followMe: "‡§Æ‡§≤‡§æ ‡§´‡•â‡§≤‡•ã ‡§ï‡§∞‡§æ:",
    },
    ta: {
      greeting: "‡Æµ‡Æ£‡Æï‡Øç‡Æï‡ÆÆ‡Øç! ‡Æ®‡Ææ‡Æ©‡Øç ‡Æö‡Ææ‡Æ∞‡Øç‡Æ§‡Æø, ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ∏‡Øç‡ÆÆ‡Ææ‡Æ∞‡Øç‡Æü‡Øç‡Æ™‡Ææ‡Æü‡Øç ü§ñ",
      experience: "‡Æµ‡Æ∞‡Æø‡Æö‡Øà‡ÆØ‡Æ±‡Øç‡Æ± ‡ÆÖ‡Æ©‡ØÅ‡Æ™‡Æµ‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ ‡Æ§‡ÆØ‡Ææ‡Æ∞‡Ææ‡Æï‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç! üéüÔ∏è",
      startChat: "üöÄ ‡ÆÖ‡Æ∞‡Æü‡Øç‡Æü‡Øà ‡Æ§‡Øä‡Æü‡Æô‡Øç‡Æï‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç",
      followMe: "‡Æé‡Æ©‡Øç‡Æ©‡Øà ‡Æ™‡Æø‡Æ©‡Øç‡Æ§‡Øä‡Æü‡Æ∞‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç:",
    },
    te: {
      greeting: "‡∞®‡∞Æ‡∞∏‡±ç‡∞§‡±á! ‡∞®‡±á‡∞®‡±Å ‡∞∏‡∞æ‡∞∞‡∞•‡∞ø, ‡∞Æ‡±Ä ‡∞∏‡±ç‡∞Æ‡∞æ‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞¨‡∞æ‡∞ü‡±ç ü§ñ",
      experience: "‡∞µ‡∞∞‡±Å‡∞∏‡∞≤‡±á‡∞®‡∞ø ‡∞Ö‡∞®‡±Å‡∞≠‡∞µ‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞∏‡∞ø‡∞¶‡±ç‡∞ß‡∞Ç‡∞ó‡∞æ ‡∞â‡∞Ç‡∞°‡∞Ç‡∞°‡∞ø! üéüÔ∏è",
      startChat: "üöÄ ‡∞ö‡∞æ‡∞ü‡±ç ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø",
      followMe: "‡∞®‡∞®‡±ç‡∞®‡±Å ‡∞Ö‡∞®‡±Å‡∞∏‡∞∞‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø:",
    },
    kn: {
      greeting: "‡≤®‡≤Æ‡≤∏‡≥ç‡≤ï‡≤æ‡≤∞! ‡≤®‡≤æ‡≤®‡≥Å ‡≤∏‡≤æ‡≤∞‡≥ç‡≤•‡≤ø, ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤∏‡≥ç‡≤Æ‡≤æ‡≤∞‡≥ç‡≤ü‡≥ç‚Äå‡≤¨‡≤æ‡≤ü‡≥ç ü§ñ",
      experience: "‡≤∏‡≤æ‡≤≤‡≤ø‡≤≤‡≥ç‡≤≤‡≤¶ ‡≤Ö‡≤®‡≥Å‡≤≠‡≤µ‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤∏‡≤ø‡≤¶‡≥ç‡≤ß‡≤∞‡≤æ‡≤ó‡≤ø! üéüÔ∏è",
      startChat: "üöÄ ‡≤ö‡≤æ‡≤ü‡≥ç ‡≤™‡≥ç‡≤∞‡≤æ‡≤∞‡≤Ç‡≤≠‡≤ø‡≤∏‡≤ø",
      followMe: "‡≤®‡≤®‡≥ç‡≤®‡≤®‡≥ç‡≤®‡≥Å ‡≤Ö‡≤®‡≥Å‡≤∏‡≤∞‡≤ø‡≤∏‡≤ø:",
    },
    ml: {
      greeting: "‡¥®‡¥Æ‡¥∏‡µç‡¥ï‡¥æ‡¥∞‡¥Ç! ‡¥û‡¥æ‡µª ‡¥∏‡¥æ‡µº‡¥•‡¥ø, ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥∏‡µç‡¥Æ‡¥æ‡µº‡¥ü‡µç‡¥ü‡µç‚Äå‡¥¨‡µã‡¥ü‡µç‡¥ü‡µç ü§ñ",
      experience: "‡¥®‡¥ø‡¥∞‡¥Ø‡¥ø‡¥≤‡µç‡¥≤‡¥æ‡¥§‡µç‡¥§ ‡¥Ö‡¥®‡µÅ‡¥≠‡¥µ‡¥§‡µç‡¥§‡¥ø‡¥®‡¥æ‡¥Ø‡¥ø ‡¥§‡¥Ø‡µç‡¥Ø‡¥æ‡¥±‡¥æ‡¥ï‡µÇ! üéüÔ∏è",
      startChat: "üöÄ ‡¥ö‡¥æ‡¥±‡µç‡¥±‡µç ‡¥Ü‡¥∞‡¥Ç‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
      followMe: "‡¥é‡¥®‡µç‡¥®‡µÜ ‡¥™‡¥ø‡¥®‡µç‡¥§‡µÅ‡¥ü‡¥∞‡µÅ‡¥ï:",
    },
    gu: {
      greeting: "‡™®‡™Æ‡™∏‡´ç‡™§‡´á! ‡™π‡´Å‡™Ç ‡™∏‡™æ‡™∞‡™•‡´Ä, ‡™§‡™Æ‡™æ‡™∞‡´ã ‡™∏‡´ç‡™Æ‡™æ‡™∞‡´ç‡™ü‡™¨‡´ã‡™ü ü§ñ",
      experience: "‡™∞‡™π‡™ø‡™§ ‡™Ö‡™®‡´Å‡™≠‡™µ ‡™Æ‡™æ‡™ü‡´á ‡™§‡´à‡™Ø‡™æ‡™∞ ‡™•‡™æ‡™ì! üéüÔ∏è",
      startChat: "üöÄ ‡™ö‡´á‡™ü ‡™∂‡™∞‡´Ç ‡™ï‡™∞‡´ã",
      followMe: "‡™Æ‡™®‡´á ‡™Ö‡™®‡´Å‡™∏‡™∞‡´ã:",
    },
    bn: {
      greeting: "‡¶®‡¶Æ‡¶∏‡ßç‡¶ï‡¶æ‡¶∞! ‡¶Ü‡¶Æ‡¶ø ‡¶∏‡¶æ‡¶∞‡¶•‡¶ø, ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡ßç‡¶ü‡¶¨‡¶ü ü§ñ",
      experience: "‡¶∏‡¶æ‡¶∞‡¶ø‡¶¨‡¶ø‡¶π‡ßÄ‡¶® ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§ ‡¶π‡¶®! üéüÔ∏è",
      startChat: "üöÄ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®",
      followMe: "‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®:",
    },
  };

  const getTranslation = (key) => {
    return translations[language]?.[key] || translations["en"][key];
  };

  return (
    <div className="overlay">
      <div className="chatContainer">
        {/* Close Button */}
        <button
          onClick={onClose}
          className="closeButton"
          aria-label="Close Chatbot"
        >
          ‚úñ
        </button>

        {/* Language Selector */}
        <div className="languageSelector">
          üåç
          <select
            aria-label="Select Language"
            value={language}
            onChange={(e) => setLanguage(e.target.value)}
          >
            <option value="en">English</option>
            <option value="es">Espa√±ol</option>
            <option value="fr">Fran√ßais</option>
            <option value="de">Deutsch</option>
            <option value="it">Italiano</option>
            <option value="hi">‡§π‡§ø‡§Ç‡§¶‡•Ä</option>
            <option value="mr">‡§Æ‡§∞‡§æ‡§†‡•Ä</option>
            <option value="ta">‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç</option>
            <option value="te">‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å</option>
            <option value="kn">‡≤ï‡≤®‡≥ç‡≤®‡≤°</option>
            <option value="ml">‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç</option>
            <option value="gu">‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä</option>
            <option value="bn">‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ</option>
          </select>
        </div>

        {/* Chatbot Header */}
        <div className="chatHeader">
          <img src={botAvatar} alt="Chatbot Avatar" className="botAvatar" />
          <div className="botDescription">
            <p>{getTranslation("greeting")}</p>
            <p>{getTranslation("experience")}</p>
          </div>
        </div>

        {/* Start Chat Button */}
        <div className="buttonContainer">
          <button className="startChatButton">
            {getTranslation("startChat")}
          </button>
        </div>

        {/* Social Media Footer */}
        <div className="socialMediaFooter">
          <p>{getTranslation("followMe")}</p>
          <div className="socialIcons">
            {[twitterIcon, instagramIcon, youtubeIcon, facebookIcon, whatsappIcon].map(
              (icon, idx) => (
                <a href="#" key={idx}>
                  <img src={icon} alt="Social Icon" />
                </a>
              )
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Chatbot;
